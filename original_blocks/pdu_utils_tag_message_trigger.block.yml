# auto-generated by grc.converter

id: pdu_utils_tag_message_trigger
label: Tag Message Trigger
category: '[Sandia]/PDU Utilities'

parameters:
-   id: type
    label: Type
    dtype: enum
    options: [c, f, i, s, b]
    option_labels: [Complex, Float, Int, Short, Byte]
    option_attributes:
        input: [complex, float, int, short, byte]
    hide: part
-   id: trig_key
    label: Trigger Tag Key
    dtype: raw
    default: pmt.intern("TRIGGER")
-   id: arm_key
    label: Arming Tag Key
    dtype: raw
    default: pmt.PMT_NIL
    options: [pmt.PMT_NIL, pmt.intern("ARM")]
    option_labels: [Disabled, pmt.intern("ARM")]
    hide: part
-   id: msg
    label: Message
    dtype: raw
    default: pmt.cons(pmt.make_dict(), pmt.init_c32vector(1,[0]))
-   id: holdoff
    label: Holdoff (samp)
    dtype: int
    default: '0'
    hide: part
-   id: tpdu_mode
    label: Mode
    dtype: enum
    default: all
    options: ['False', 'True']
    option_labels: [Message, Timed PDU]
    option_attributes:
        hide: [all, part]
-   id: samp_rate
    label: Sample Rate
    dtype: float
    default: 1e6
    hide: ${ tpdu_mode.hide }
-   id: start_time
    label: Start Time
    dtype: float
    default: '0.0'
    hide: ${ tpdu_mode.hide }
-   id: delay_time
    label: Delay Time
    dtype: float
    default: '0.0'
    hide: ${ tpdu_mode.hide }
-   id: showport
    label: Config Port
    dtype: enum
    default: 'True'
    options: ['False', 'True']
    option_labels: [Show, Hide]
    hide: part

inputs:
-   domain: stream
    dtype: ${ type.input }
-   domain: message
    id: ctrl
    optional: true
    hide: ${ showport }

outputs:
-   domain: message
    id: msg
    optional: true
asserts:
- ${ holdoff >= 0 }
- ${ samp_rate > 0 }
- ${ start_time >= 0 }
- ${ delay_time >= 0 }

templates:
    imports: |-
        import pdu_utils
        import pmt
    make: pdu_utils.tag_message_trigger_${type}(${trig_key}, ${arm_key}, ${msg}, ${holdoff},
        ${samp_rate}, ${start_time}, ${delay_time}, ${tpdu_mode})
    callbacks:
    - set_trigger_key(${trig_key})
    - set_arming_key(${arm_key})
    - set_message(${msg})
    - set_holdoff(${holdoff})
    - set_sample_rate(${samp_rate})
    - set_delay_time(${delay_time})

file_format: 1
