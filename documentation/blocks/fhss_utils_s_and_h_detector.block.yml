# auto-generated by grc.converter

id: fhss_utils_s_and_h_detector
label: Sample and Hold Detector
category: '[Sandia]/FHSS Utilities'

parameters:
-   id: freq_sample_delay_samps
    label: Freq S&H Delay
    dtype: raw
    default: '128'
    hide: none
-   id: freq_samps_to_avg
    label: Freq Avg Samples
    dtype: raw
    default: '128'
    hide: none
-   id: mag_samps_to_avg
    label: Mag Avg Samples
    dtype: raw
    default: '128'
    hide: none
-   id: thresh
    label: Threshold
    dtype: raw
    default: '0.005'
    hide: none

inputs:
-   label: mag
    domain: stream
    dtype: float
    vlen: 1
-   label: freq
    domain: stream
    dtype: float
    vlen: 1

outputs:
-   domain: stream
    dtype: float
    vlen: 1
-   label: inst_f
    domain: stream
    dtype: float
    vlen: 1
    optional: true
-   label: m_t
    domain: stream
    dtype: float
    vlen: 1
    optional: true
-   label: m_avg
    domain: stream
    dtype: float
    vlen: 1
    optional: true

templates:
    imports: import fhss_utils
    make: fhss_utils.s_and_h_detector(${freq_sample_delay_samps}, ${freq_samps_to_avg},
        ${mag_samps_to_avg}, ${thresh})
    callbacks:
    - set_freq_sample_delay_samps(${freq_sample_delay_samps})
    - set_freq_samps_to_avg(${freq_samps_to_avg})
    - set_mag_samps_to_avg(${mag_samps_to_avg})
    - set_thresh(${thresh})

documentation: |-
    ######################################################
    ######################################################
    This GNU Radio module contains tools for processing frequency hopping spread spectrum signals. Blocks derived from the gr-iridium project exist to detect narrowband bursts within wideband signals and downconvert and center them. Metadata is tracked through this process enabling reconstruction of where the bursts originated in time and frequency. Another set of blocks exists to baseband all bursts within a high fidelity signal capture which is useful for reverse engineering of FHSS datasets.

    ### General Concept of High Fidelity FHSS Signal Dehopping

    The dataset dehopper blocks were designed to quickly allow for good accuracy dehopping of high fidelity FHSS FSK recordings. This is accomplished by a two-stage dehopping process by which a coarse FFT is taken and peak values are taken by a simple sample-and-hold block when an amplitude threshold is crossed, then a second stage does fine frequency correction by taking an instantaneous frequency average. This works well for FSK signals but requires some work for other signals.


    Simple FHSS Dehopping Flowgraph: gr-fhss/docs/figures/fhss_dehopper.png
    ######################################################
    ######################################################

file_format: 1
