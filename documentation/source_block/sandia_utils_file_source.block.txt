# auto-generated by grc.converter

id: sandia_utils_file_source
label: File Source
category: '[Sandia]/Sandia Utilities/File Operators'

parameters:
-   id: file
    label: File
    dtype: file_open
    hide: part
-   id: file_type
    label: File Type
    dtype: string
    default: raw
    options: [message, raw, raw_header ]
    option_labels: [Message, Raw IQ, Raw IQ + Header ]
    hide: part
-   id: rate
    label: Sampling Rate
    dtype: int
    default: int(samp_rate)
    hide: ${ ('all' if file_type == 'message' else 'none') }
-   id: type
    label: Output Type
    dtype: enum
    options: [complex, sc16, float, int, short, byte]
    option_labels: [Complex Float, Complex Short Int, Float, Int, Short, Byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, 2*gr.sizeof_short, gr.sizeof_float, gr.sizeof_int,
            gr.sizeof_short, gr.sizeof_char]
    hide: ${ ('all' if file_type == 'message' else 'part') }
-   id: force_new
    label: Force New File?
    dtype: enum
    default: 'False'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: repeat
    label: Repeat
    dtype: enum
    default: 'False'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: vlen
    label: Vector Length
    dtype: int
    default: '1'
    hide: ${ ('all' if file_type == 'message' else 'part') }
-   id: begin_tag
    label: Add begin tag
    dtype: raw
    default: pmt.PMT_NIL
    hide: ${ ('all' if file_type == 'message' else 'part') }
-   id: file_tags
    label: Add file tags
    dtype: enum
    default: 'False'
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
    hide: ${ ('all' if file_type == 'message' else 'part') }
-   id: queue_depth
    label: File Queue Depth
    dtype: int
    default: '100'
-   id: msg_period_ms
    label: Message Period (ms)
    dtype: int
    default: '1000'
    hide: ${ ('none' if file_type == 'message' else 'all') }

inputs:
-   domain: message
    id: pdu
    optional: true

outputs:
-   domain: stream
    dtype: ${ ('message' if file_type == 'message' else type) }
    vlen: ${ vlen }
asserts:
- ${ vlen > 0 }

templates:
    imports: |-
        import sandia_utils
        import pmt
    make: |+
        sandia_utils.file_source(${type.size}*${vlen}, ${file}, ${file_type}, ${repeat}, ${force_new})
        self.${id}.set_begin_tag(${begin_tag})
        self.${id}.add_file_tags(${file_tags})
        self.${id}.set_file_queue_depth(${queue_depth})

        % if context.get('file_type') == "'message'":
        # set message hop period
        self.${id}.set_msg_hop_period(${msg_period_ms})
        % endif

    callbacks:
    - self.${id}.set_begin_tag(${begin_tag})
    - self.${id}.add_file_tags(${file_tags})
    - self.${id}.set_file_queue_depth(${queue_depth})
    - self.${id}.set_msg_hop_period(${msg_period_ms})

documentation: |-
    ######################################################
    ######################################################
    Add info here
    ######################################################
    ######################################################

file_format: 1
