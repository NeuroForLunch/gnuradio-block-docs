# auto-generated by grc.converter

id: fhss_utils_tagged_burst_to_pdu
label: Tagged Burst to PDU
category: '[Sandia]/FHSS Utilities'

parameters:
-   id: decimation
    label: Decimation
    dtype: int
    default: '16'
-   id: taps
    label: Filter Taps
    dtype: float_vector
-   id: min_burst_time
    label: Min Burst Time
    dtype: float
    default: '.003'
-   id: max_burst_time
    label: Max Burst Time
    dtype: float
    default: '.5'
-   id: relative_center_frequency
    label: Relative Center Frequency
    dtype: float
    default: '0.0'
-   id: relative_span
    label: Relative Span
    dtype: float
    default: '1.0'
-   id: relative_sample_rate
    label: Relative Sample Rate
    dtype: float
    default: '1.0'
-   id: sample_rate
    label: Sample Rate
    dtype: float
    default: 16e6
-   id: threads
    label: Num Threads
    dtype: int
    default: '3'
    hide: part

inputs:
-   domain: stream
    dtype: complex

outputs:
-   domain: message
    id: cpdus

templates:
    imports: import fhss_utils
    make: fhss_utils.tagged_burst_to_pdu(${decimation}, ${taps}, ${min_burst_time},
        ${max_burst_time}, ${relative_center_frequency}, ${relative_span}, ${relative_sample_rate},
        ${sample_rate}, ${threads})

documentation: |-
    ######################################################
    ######################################################
    This GNU Radio module contains tools for processing frequency hopping spread spectrum signals. Blocks derived from the gr-iridium project exist to detect narrowband bursts within wideband signals and downconvert and center them. Metadata is tracked through this process enabling reconstruction of where the bursts originated in time and frequency. Another set of blocks exists to baseband all bursts within a high fidelity signal capture which is useful for reverse engineering of FHSS datasets.

    ### General Concept of High Fidelity FHSS Signal Dehopping

    The dataset dehopper blocks were designed to quickly allow for good accuracy dehopping of high fidelity FHSS FSK recordings. This is accomplished by a two-stage dehopping process by which a coarse FFT is taken and peak values are taken by a simple sample-and-hold block when an amplitude threshold is crossed, then a second stage does fine frequency correction by taking an instantaneous frequency average. This works well for FSK signals but requires some work for other signals.


    Simple FHSS Dehopping Flowgraph: gr-fhss/docs/figures/fhss_dehopper.png
    ######################################################
    ######################################################

file_format: 1
