# auto-generated by grc.converter

id: sandia_utils_file_sink
label: File Sink
category: '[Sandia]/Sandia Utilities/File Operators'

parameters:
-   id: type
    label: Input Type
    dtype: enum
    options: [complex, sc16, float, int, short, byte, message]
    option_labels: [Complex Float, Complex Short Int, Float, Int, Short, Byte, Message]
    option_attributes:
        size: [gr.sizeof_gr_complex, 2*gr.sizeof_short, gr.sizeof_float, gr.sizeof_int,
            gr.sizeof_short, gr.sizeof_char, gr.sizeof_char]
        str: ["'complex'","'complex_int'","'float'","'int'",
            "'short'","'byte'","'message'"]
    hide: part
-   id: vlen
    label: Vec Length
    dtype: int
    default: '1'
    hide: ${ ('all' if type == 'message' else 'part') }
-   id: mode
    label: Mode
    dtype: enum
    default: sandia_utils.MANUAL
    options: [sandia_utils.MANUAL, sandia_utils.TRIGGERED]
    option_labels: [Manual, Triggered]
    hide: ${ ('all' if type == 'message' else 'part') }
-   id: record
    label: Record?
    dtype: bool
    default: 'False'
    options: ['True', 'False']
    hide: ${ ('none' if type == 'message' else 'part') }
-   id: file_type
    label: File Type
    dtype: string
    default: raw
    options: [raw, raw_header ]
    option_labels: [Raw IQ, Raw IQ + Header ]
    hide: part
-   id: rate
    label: Sampling Rate
    dtype: int
    default: int(samp_rate)
    hide: ${ ('all' if type == 'message' else 'part') }
-   id: directory
    label: Directory
    category: File Options
    dtype: string
    default: '""'
    hide: ${ ('all' if type == 'message' else 'part') }
-   id: create_new_dir
    label: Create New Directory?
    category: File Options
    dtype: bool
    default: 'True'
    options: ['True', 'False']
    hide: ${ ('all' if type == 'message' else 'none') }
-   id: name_spec
    label: ${ ('File Name Specifier' if type != 'message' else 'File Name') }
    category: File Options
    dtype: ${ ('string' if type != 'message' else 'file_save') }
    default: '"%Y%m%d_%H_%M_%S_fc=%fcMHz_fs=%fskHz.dat"'
    hide: ${ ('none' if type == 'message' else 'part') }
-   id: nsamples
    label: File Length (Samples)
    category: File Options
    dtype: int
    default: '0'
    hide: ${ ('all' if type == 'message' else 'none') }
-   id: file_num_rollover
    label: File Number Rollover
    category: File Options
    dtype: int
    default: '0'
    hide: ${ ('all' if type == 'message' else 'none') }
-   id: align
    label: Align to Second Boundary?
    category: File Options
    dtype: bool
    default: 'True'
    options: ['True', 'False']
    hide: ${ ('all' if type == 'message' else 'none') }
-   id: debug
    label: Debug
    dtype: enum
    default: 'False'
    options: ['True', 'False']
    option_labels: [Enabled, Disabled]
    option_attributes:
        hide: ['False', 'True']
    hide: part

inputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }
    multiplicity: ${ (0 if type == 'message' else 1) }
    optional: true

outputs:
-   domain: message
    id: pdu
    optional: true

asserts:
- ${ vlen > 0 }
- ${ nsamples > -1 }
- ${ file_num_rollover > -1 }

templates:
    imports: import sandia_utils
    make: |+
        sandia_utils.file_sink(${type.str}, ${type.size}*${vlen}, ${file_type},
          ${mode}, ${nsamples}, ${rate}, ${directory}, ${name_spec}, ${debug})

        self.${id}.set_recording(${record})
        self.${id}.set_gen_new_folder(${create_new_dir})
        self.${id}.set_second_align(${align})
        self.${id}.set_file_num_rollover(${file_num_rollover})


    callbacks:
    - set_mode(${mode})
    - set_recording(${record})
    - set_nsamples(${nsamples})
    - set_second_align(${align})
    - set_file_num_rollover(${file_num_rollover})



documentation: |-
    ######################################################
    ######################################################
    Add info here
    ######################################################
    ######################################################

file_format: 1
